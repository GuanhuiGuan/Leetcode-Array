class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        if(matrix.empty()) return {};
        
        int down = matrix.size() - 1, up = 0;
        int right = matrix[0].size() - 1, left = 0;
        vector<int> re((down + 1) * (right + 1));
        int row, col, k = 0;
        
        while(true){
            for(col = left; col <= right; col++){    //move right
                re[k++] = (matrix[up][col]);
            }
            if(++up > down) break;
            
            for(row = up; row <= down; row++){     //move down
                re[k++] = (matrix[row][right]);
            }
            if(--right < left) break;
            
            for(col = right; col >= left; col--){     //move left
                re[k++] = (matrix[down][col]);
            }
            if(--down < up) break;
            
            for(row = down; row >= up; row--){     //move up
                re[k++] = (matrix[row][left]);
            }
            if(++left > right) break;
        }
        return re;
    }
};
